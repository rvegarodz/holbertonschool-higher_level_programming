The ''2-matrix_divides'' module
============================

Using ''matrix_divided''
---------------------

The module 2-matrix_divides supplies one function, matrix_divided()).
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero


    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], "string")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix_divided(10, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3],[4, 5, 6, 8]], 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 2, 3, 4],[4, 5, 6]], 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[float('NaN')]], 1)
    [[nan]]

    >>> matrix_divided([None], 1)
    Traceback (most recent call last):
    ...
    TypeError: object of type 'NoneType' has no len()

    >>> matrix_divided([["Holberton", "School", "98"],[4, 5, 6]], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3],["Holberton", "School", "98"]], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats